
# ✅ Fast checks, lint, build, and cache for every PR
name: 🧪 CI

on:
  pull_request:

jobs:
  flake-ci:
    name: ✅ Flake CI
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code — with **fetch-depth: 0**!
      - name: 📥 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ⬅️ ensures flake metadata and lock file match!

      # 2️⃣ Install Nix + enable flakes
      - name: 🧊 Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      # 3️⃣ Setup Cachix
      - name: 📦 Cachix cache
        uses: cachix/cachix-action@v14
        with:
          name: schrovimger
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      # 4️⃣ Install nixpkgs-fmt for formatting
      - name: 🧹 Install nixpkgs-fmt
        run: nix profile install nixpkgs#nixpkgs-fmt

      # 5️⃣ Check that all .nix files are formatted
      - name: 🧹 Check formatting
        run: |
          nixpkgs-fmt $(find . -name '*.nix')
          git diff --exit-code

      # 6️⃣ Check flake correctness WITHOUT updating lock
      - name: 🔍 nix flake check
        run: nix flake check --all-systems --no-update-lock-file

      # 7️⃣ Build the default package
      - name: 🔨 nix build
        run: nix build

      # 8️⃣ (Optional) Verify dev shell works
      - name: 🧑‍💻 nix develop test
        run: nix develop --command echo "Dev shell works!"
